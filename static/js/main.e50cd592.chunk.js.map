{"version":3,"sources":["../../src/styles.js","../../src/index.js","App.js","index.js"],"names":["ContributorsList","styled","Profile","Photo","Intro","Name","Subtitle","octokit","React","render","src","this","props","avatar_url","href","url","constructor","super","contributors","loadContributors","owner","repo","Promise","resolve","reject","result","_","state","reason","componentDidMount","Array","map","contributor","key","name","html_url","repos","App","ReactDOM","document","getElementById"],"mappings":"+rCAEO,MAAMA,EAAmBC,IAAH,gBAQhBC,EAAUD,IAAH,gBAQPE,EAAQF,IAAH,gBAQLG,EAAQH,IAAH,gBASLI,EAAOJ,IAAH,eAIJK,EAAWL,IAAH,kBC3BfM,EAAU,IAAhB,IAEA,MAAM,UAAyBC,IAA/B,UACEC,SACE,OACE,yBACE,qBAAOC,IAAKC,KAAKC,MAAMC,aACvB,yBACE,yBAAOF,KAAKC,MADd,MAEE,yBACE,uBAAGE,KAAMH,KAAKC,MAAMG,KAAMJ,KAAKC,MANvC,SAcW,MAAM,UAAqBJ,IAA3B,UACbQ,YAAYJ,GACVK,MAAA,GACAN,KAAA,MAAa,CACXO,aAAc,IAIlBC,iBAAiBC,EAAOC,GACtB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3BjB,yBACoB,CAChBa,MADgB,EAEhBC,KAAMA,IAHVd,KAMIkB,IACEd,KAAA,SAAc,CACZO,aAAc,IACTQ,YACDA,YAAUf,KAAKgB,MAAfD,aAAmCD,EAAnCC,KADCA,yBADS,WAQhBH,KAEFK,IACEJ,SAMVK,oBAEOlB,KAAKC,MAAV,MAQID,KAAKC,MAAMS,MAASS,cAAcnB,KAAKC,MAA3C,MAMAD,KAAA,eAAoBU,IAClBV,KAAA,iBAAsBA,KAAKC,MAA3B,WANAD,KAAA,iBAAsBA,KAAKC,MAA3B,MAAwCD,KAAKC,MAA7C,MARAD,KAAA,SAAc,CACZO,aAAc,KAiBpBT,SACE,OACE,yBACGE,KAAKgB,MAAMT,cAAgBP,KAAKgB,MAAMT,aAAtC,OACGP,KAAKgB,MAAMT,aAAaa,IAAI,CAACC,EAAaC,IAEtC,qBACEA,IADF,EAEEpB,WAAYmB,EAFd,WAGEE,KAAMF,EAHR,MAIEjB,IAAKiB,EAAYG,iBAT/B,I,QClFJ,MAGMC,EAAQ,CAAC,aAAc,qBAMdC,MAJH,IACH,kBAAC,EAAD,CAAcjB,MANT,cAMuBC,KAAMe,ICL3CE,IAAS7B,OAAO,kBAAC,EAAD,MAAS8B,SAASC,eAAe,W","file":"static/js/main.e50cd592.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContributorsList = styled.div`\n  display: flex;\n  align-content: center;\n  flex-flow: row wrap;\n  height: 100%;\n  margin: 1rem 1rem;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  min-width: 18.125rem;\n  width: 20%;\n  margin: 1rem;\n  padding: 1rem;\n`;\n\nexport const Photo = styled.img`\n  overflow: hidden;\n  border-radius: 50%;\n  height: 4.5rem;\n  margin-bottom: 0;\n  width: 4.5rem;\n`;\n\nexport const Intro = styled.div`\n  display: flex;\n  flex: 1 1;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 1rem;\n  text-align: inherit;\n`;\n\nexport const Name = styled.h4`\n  margin: 0;\n`;\n\nexport const Subtitle = styled.small`\n  margin-top: 0.25rem;\n`;\n","import React from \"react\";\nimport { Octokit } from \"@octokit/rest\";\nimport _ from \"lodash\";\nimport {\n  ContributorsList,\n  Profile,\n  Photo,\n  Intro,\n  Name,\n  Subtitle\n} from \"./styles\";\n\nconst octokit = new Octokit();\n\nclass ProfileComponent extends React.Component {\n  render() {\n    return (\n      <Profile>\n        <Photo src={this.props.avatar_url} />\n        <Intro>\n          <Name>{this.props.name}</Name>\n          <Subtitle>\n            <a href={this.props.url}>{this.props.url}</a>\n          </Subtitle>\n        </Intro>\n      </Profile>\n    );\n  }\n}\n\nexport default class Contributors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contributors: []\n    };\n  }\n\n  loadContributors(owner, repo) {\n    return new Promise((resolve, reject) => {\n      octokit.repos\n        .listContributors({\n          owner: owner,\n          repo: repo\n        })\n        .then(\n          result => {\n            this.setState({\n              contributors: [\n                ..._.orderBy(\n                  _.unionBy(this.state.contributors, result.data, \"login\"),\n                  \"contributions\",\n                  \"desc\"\n                )\n              ]\n            });\n            resolve();\n          },\n          reason => {\n            reject(reason);\n          }\n        );\n    });\n  }\n\n  componentDidMount() {\n    // No repo props provided\n    if (!this.props.repo) {\n      this.setState({\n        contributors: []\n      });\n      return;\n    }\n\n    // If repo props provided but contains a single repo name\n    if (this.props.repo && !Array.isArray(this.props.repo)) {\n      this.loadContributors(this.props.owner, this.props.repo);\n      return;\n    }\n\n    // repo props provided as array\n    this.props.repo.map(repo => {\n      this.loadContributors(this.props.owner, repo);\n    });\n  }\n\n  render() {\n    return (\n      <ContributorsList>\n        {this.state.contributors && this.state.contributors.length\n          ? this.state.contributors.map((contributor, key) => {\n              return (\n                <ProfileComponent\n                  key={key}\n                  avatar_url={contributor.avatar_url}\n                  name={contributor.login}\n                  url={contributor.html_url}\n                />\n              );\n            })\n          : undefined}\n      </ContributorsList>\n    );\n  }\n}\n","import React from \"react\";\r\n\r\nimport Contributors from \"react-contributors\";\r\n\r\n// Owner username.\r\nconst owner = \"evert-arias\";\r\n\r\n// Repo(s) name. Single string or array with multiple repo names.\r\nconst repos = [\"EasyButton\", \"easybtn.earias.me\"];\r\n\r\nconst App = () => {\r\n  return <Contributors owner={owner} repo={repos} />;\r\n};\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}